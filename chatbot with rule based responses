<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Simple Rule-Based Chatbot</title>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Inter&display=swap');
    body {
      font-family: 'Inter', sans-serif;
      background: linear-gradient(135deg, #0ea5e9, #3b82f6);
      margin: 0;
      min-height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      padding: 16px;
    }
    .chat-container {
      background: rgba(255 255 255 / 0.15);
      backdrop-filter: blur(12px);
      border-radius: 16px;
      max-width: 480px;
      width: 100%;
      display: flex;
      flex-direction: column;
      height: 80vh;
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
    }
    header {
      padding: 24px 32px;
      font-size: 1.5rem;
      font-weight: 700;
      color: white;
      text-align: center;
      border-bottom: 1px solid rgba(255 255 255 / 0.2);
    }
    .chat-window {
      flex: 1;
      overflow-y: auto;
      padding: 24px 32px;
      display: flex;
      flex-direction: column;
      gap: 16px;
    }
    .message {
      max-width: 75%;
      padding: 12px 20px;
      border-radius: 16px;
      font-size: 1rem;
      line-height: 1.4;
      word-wrap: break-word;
    }
    .bot-message {
      background: rgba(255 255 255 / 0.8);
      color: #1e293b;
      align-self: flex-start;
      border-bottom-left-radius: 0;
      box-shadow: 0 2px 6px rgba(0,0,0,0.1);
    }
    .user-message {
      background: #2563eb;
      color: white;
      align-self: flex-end;
      border-bottom-right-radius: 0;
      box-shadow: 0 2px 6px rgba(0,0,0,0.2);
    }
    form {
      display: flex;
      padding: 16px 24px;
      background: rgba(255 255 255 / 0.15);
      border-top: 1px solid rgba(255 255 255 / 0.2);
      gap: 12px;
    }
    input[type="text"] {
      flex: 1;
      font-size: 1rem;
      padding: 12px 16px;
      border-radius: 24px;
      border: none;
      outline: none;
      background: rgba(255 255 255 / 0.85);
      color: #1e293b;
      transition: box-shadow 0.2s ease;
    }
    input[type="text"]:focus {
      box-shadow: 0 0 10px 2px #60a5fa;
    }
    button {
      background: #1e40af;
      border: none;
      color: white;
      font-weight: 700;
      padding: 12px 24px;
      border-radius: 24px;
      cursor: pointer;
      font-size: 1rem;
      transition: background 0.3s ease;
    }
    button:hover {
      background: #1e3a8a;
    }
    /* Scrollbar styling */
    .chat-window::-webkit-scrollbar {
      width: 8px;
    }
    .chat-window::-webkit-scrollbar-thumb {
      background-color: rgba(255 255 255 / 0.3);
      border-radius: 8px;
    }
    /* Responsive */
    @media (max-width: 480px) {
      .chat-container {
        height: 90vh;
        max-width: 100%;
      }
      header {
        font-size: 1.25rem;
        padding: 20px;
      }
      .chat-window {
        padding: 20px;
        gap: 12px;
      }
      form {
        padding: 12px 20px;
      }
    }
  </style>
</head>
<body>
  <section class="chat-container" aria-label="Chatbot conversation">
    <header role="banner">Simple Rule-Based Chatbot</header>
    <main class="chat-window" role="log" aria-live="polite" aria-relevant="additions"></main>
    <form role="search" aria-label="Send message to chatbot">
      <input
        type="text"
        id="user-input"
        placeholder="Type your message..."
        autocomplete="off"
        aria-required="true"
        aria-describedby="input-desc"
      />
      <button type="submit" aria-label="Send message">Send</button>
    </form>
  </section>

  <script>
    const chatWindow = document.querySelector('.chat-window');
    const form = document.querySelector('form');
    const input = document.getElementById('user-input');

    // Simple rules for responses with regex matching
    const rules = [
      { pattern: /hello|hi|hey/i, response: "Hello! How can I help you today?" },
      { pattern: /how are you/i, response: "I'm a bot, but I'm doing great. Thanks for asking!" },
      { pattern: /what is your name|who are you/i, response: "I am a simple rule-based chatbot." },
      { pattern: /help|support/i, response: "Sure, I am here to help you. What do you need assistance with?" },
      { pattern: /\bweather\b/i, response: "I can't provide real-time weather yet, but it's always sunny in the digital world!" },
      { pattern: /thank you|thanks/i, response: "You're welcome! If you have more questions, just ask." },
      { pattern: /bye|goodbye|see you/i, response: "Goodbye! Have a great day!" },
    ];

    function appendMessage(text, isUser) {
      const msgDiv = document.createElement('div');
      msgDiv.textContent = text;
      msgDiv.classList.add('message');
      msgDiv.classList.add(isUser ? 'user-message' : 'bot-message');
      chatWindow.appendChild(msgDiv);
      chatWindow.scrollTop = chatWindow.scrollHeight;
    }

    // Simple pattern match to find rule response or fallback
    function getBotResponse(inputText) {
      for (const rule of rules) {
        if (rule.pattern.test(inputText)) {
          return rule.response;
        }
      }
      return "Sorry, I didn't understand that. Can you please rephrase?";
    }

    form.addEventListener('submit', e => {
      e.preventDefault();
      const userInput = input.value.trim();
      if (!userInput) return;
      appendMessage(userInput, true);
      input.value = '';
      // simulate thinking delay
      setTimeout(() => {
        const botResponse = getBotResponse(userInput);
        appendMessage(botResponse, false);
      }, 500);
    });

    // Welcome message on page load
    window.onload = () => {
      appendMessage("Hi! I'm your chatbot. Ask me anything.", false);
      input.focus();
    };
  </script>
</body>
</html>

